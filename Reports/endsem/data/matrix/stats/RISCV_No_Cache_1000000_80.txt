
---------- Begin Simulation Statistics ----------
simSeconds                                   3.771727                       # Number of seconds simulated (Second)
simTicks                                 3771726997000                       # Number of ticks simulated (Tick)
finalTick                                3771726997000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                    123.09                       # Real time elapsed on the host (Second)
hostTickRate                              30641048081                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    4434776                       # Number of bytes of host memory used (Byte)
simInsts                                     46308329                       # Number of instructions simulated (Count)
simOps                                       46359578                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   376203                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     376619                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.membus.transDist::ReadReq     72178850                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadResp     72204462                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteReq      4263101                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WriteResp      4263101                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::LoadLockedReq        25612                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondReq        25612                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::StoreCondResp        25612                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapReq        25614                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::SwapResp        25614                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores.core.icache_port::board.memory.mem_ctrl.port    112978762                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores.core.icache_port::total    112978762                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores.core.dcache_port::board.memory.mem_ctrl.port     40058816                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.processor.cores.core.dcache_port::total     40058816                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total    153037578                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.processor.cores.core.icache_port::board.memory.mem_ctrl.port    225957524                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores.core.icache_port::total    225957524                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores.core.dcache_port::board.memory.mem_ctrl.port    115831337                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.processor.cores.core.dcache_port::total    115831337                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total    341788861                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples     76518789                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0     76518789    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total     76518789                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED 3771726997000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED 3771726997000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy  80833116000                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer0.occupancy 128127524750                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy  39780178500                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests            0                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests            0                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                           1000                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl.avgPriority_processor.cores.core.inst::samples  56489381.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.avgPriority_processor.cores.core.data::samples  12947867.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl.priorityMinLatency 0.000000018750                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl.priorityMaxLatency 1.920676451250                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl.numReadWriteTurnArounds          370                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl.numWriteReadTurnArounds          370                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl.numStayReadState      144145362                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl.numStayWriteState          5552                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl.readReqs               72204462                       # Number of read requests accepted (Count)
board.memory.mem_ctrl.writeReqs               4314327                       # Number of write requests accepted (Count)
board.memory.mem_ctrl.readBursts             72204462                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl.writeBursts             4314327                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl.servicedByWrQ           2773167                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl.mergedWrBursts          4308374                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl.avgRdQLen                  1.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.avgWrQLen                 26.99                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl.numRdRetry                    0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl.numWrRetry                    0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl.readPktSize::0           783112                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::1              664                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::2         64222585                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::3          7198101                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::4                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::5                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.readPktSize::6                0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::0          466455                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::1              13                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::2         1205643                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::3         2642216                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::4               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::5               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.writePktSize::6               0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl.rdQLenPdf::0           69431295                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::1                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::2                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::3                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::4                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::5                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::6                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::7                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::8                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::9                  0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::10                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::11                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::12                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::13                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::14                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::15                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::16                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::17                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::18                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::19                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::20                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::21                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::22                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::23                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::24                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::25                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::26                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::27                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::28                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::29                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::30                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdQLenPdf::31                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::0                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::1                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::2                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::3                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::4                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::5                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::6                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::7                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::8                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::9                  1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::10                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::11                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::12                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::13                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::14                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::15                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::16                 2                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::17               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::18               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::19               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::20               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::21               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::22               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::23               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::24               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::25               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::26               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::27               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::28               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::29               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::30               371                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::31               370                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::32               370                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::33                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::34                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::35                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::36                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::37                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::38                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::39                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::40                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::41                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::42                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::43                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::44                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::45                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::46                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::47                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::48                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::49                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::50                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::51                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::52                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::53                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::54                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::55                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::56                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::57                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::58                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::59                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::60                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::61                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::62                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.wrQLenPdf::63                 0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl.rdPerTurnAround::samples          370                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::mean 187650.270270                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::gmean 23458.601690                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::stdev 900885.280927                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::0-524287          341     92.16%     92.16% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::524288-1.04858e+06            1      0.27%     92.43% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::1.04858e+06-1.57286e+06           26      7.03%     99.46% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::1.57286e+06-2.09715e+06            1      0.27%     99.73% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::1.57286e+07-1.62529e+07            1      0.27%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.rdPerTurnAround::total          370                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl.wrPerTurnAround::samples          370                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::mean    16.005405                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::gmean    16.005094                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::stdev     0.103975                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::16          369     99.73%     99.73% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::18            1      0.27%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.wrPerTurnAround::total          370                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl.bytesReadWrQ          177482688                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl.bytesReadSys          315259588                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl.bytesWrittenSys        26426781                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl.avgRdBWSys         83584943.51546516                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.avgWrBWSys         7006546.60876029                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl.totGap             3771726871000                       # Total gap between requests (Tick)
board.memory.mem_ctrl.avgGap                 49291.51                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.inst    225957524                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorReadBytes::processor.cores.core.data     75861939                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl.requestorWriteBytes::processor.cores.core.data        33900                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.inst 59908239.429769098759                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadRate::processor.cores.core.data 20113316.541822869331                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorWriteRate::processor.cores.core.data 8987.925167161828                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.inst     56489381                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadAccesses::processor.cores.core.data     15715081                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl.requestorWriteAccesses::processor.cores.core.data      4314327                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.inst 1216304655250                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadTotalLat::processor.cores.core.data 307260446500                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl.requestorWriteTotalLat::processor.cores.core.data 101321984281250                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.inst     21531.56                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorReadAvgLat::processor.cores.core.data     19551.95                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl.requestorWriteAvgLat::processor.cores.core.data  23485003.40                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.inst    225957524                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::processor.cores.core.data     89302064                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesRead::total    315259588                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::processor.cores.core.inst    225957524                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesInstRead::total    225957524                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::processor.cores.core.data     26324289                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.bytesWritten::total     26324289                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.inst     56489381                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::processor.cores.core.data     15715081                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numReads::total     72204462                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::processor.cores.core.data      4288713                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.numWrites::total      4288713                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.inst     59908239                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::processor.cores.core.data     23676704                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwRead::total     83584944                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::processor.cores.core.inst     59908239                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwInstRead::total     59908239                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::processor.cores.core.data      6979373                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwWrite::total      6979373                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.inst     59908239                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::processor.cores.core.data     30656077                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.bwTotal::total     90564316                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl.dram.readBursts        69431295                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl.dram.writeBursts           5922                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::0     41412186                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::1      5732412                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::2      2956387                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::3      2354660                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::4       163264                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::5      1268041                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::6       213905                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::7      5542550                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::8       286308                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::9       468936                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::10          443                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::11          124                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::12        59696                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::13      8231500                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::14       579973                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankRdBursts::15       160910                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::0          153                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::1          172                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::2          164                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::3          152                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::4          153                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::5          242                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::6          283                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::7          279                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::8         1183                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::9          521                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::10          147                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::11            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::12           20                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::13         2173                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::14          126                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.perBankWrBursts::15          154                       # Per bank write bursts (Count)
board.memory.mem_ctrl.dram.totQLat       221728320500                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl.dram.totBusLat     347156475000                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl.dram.totMemAccLat  1523565101750                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl.dram.avgQLat            3193.49                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgBusLat          5000.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.avgMemAccLat      21943.49                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl.dram.readRowHits       62559480                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl.dram.writeRowHits          5276                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl.dram.readRowHitRate        90.10                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl.dram.writeRowHitRate        89.09                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl.dram.bytesPerActivate::samples      6872455                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::mean   646.636478                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::gmean   446.049978                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::stdev   409.785279                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::0-127       673193      9.80%      9.80% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::128-255      1243652     18.10%     27.89% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::256-383       654777      9.53%     37.42% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::384-511       261108      3.80%     41.22% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::512-639       151900      2.21%     43.43% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::640-767       203346      2.96%     46.39% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::768-895       126869      1.85%     48.23% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::896-1023       258985      3.77%     52.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::1024-1151      3298625     48.00%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.bytesPerActivate::total      6872455                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl.dram.dramBytesRead   4443602880                       # Total bytes read (Byte)
board.memory.mem_ctrl.dram.dramBytesWritten       379008                       # Total bytes written (Byte)
board.memory.mem_ctrl.dram.avgRdBW        1178.134813                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.avgWrBW           0.100487                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl.dram.peakBW            12800.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl.dram.busUtil               9.20                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl.dram.busUtilRead           9.20                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl.dram.busUtilWrite          0.00                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl.dram.pageHitRate          90.10                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl.dram.power_state.pwrStateResidencyTicks::UNDEFINED 3771726997000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl.dram.rank0.actEnergy  38456446980                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preEnergy  20440078725                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.readEnergy 425853911700                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.writeEnergy      8341560                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.refreshEnergy 297736533120.000061                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actBackEnergy 1702970212230                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.preBackEnergy  14262988320                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.totalEnergy 2499728512635                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank0.averagePower   662.754360                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::IDLE  17885695250                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::REF 125946080000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT 3627895221750                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.actEnergy  10612924560                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preEnergy   5640888000                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.readEnergy  69885534600                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.writeEnergy     22571280                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.refreshEnergy 297736533120.000061                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actBackEnergy 1600476668280                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.preBackEnergy 100573341120                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.totalEnergy 2084948460960                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl.dram.rank1.averagePower   552.783503                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::IDLE 247807188750                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::REF 125946080000                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT 3397973728250                       # Time in different power states (Tick)
board.memory.mem_ctrl.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl.power_state.pwrStateResidencyTicks::UNDEFINED 3771726997000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles       3771726997                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi              81.447638                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.012278                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.commitStats0.numInsts     46308611                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps     46359860                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP            0                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP            0                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi    81.447638                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.012278                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs            0                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts           12                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts     46126181                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts     15715081                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts      4314350                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass        51542      0.11%      0.11% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu     25430295     54.85%     54.97% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult       563504      1.22%     56.18% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv       285088      0.61%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     56.80% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead     15740695     33.95%     90.75% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite      4288724      9.25%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite           12      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total     46359860                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl      4292775                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl      3824539                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl       468236                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl      3214845                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl      1077930                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall       408336                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn       408331                       # Class of control type instructions committed (Count)
board.processor.cores.core.exec_context.thread_0.numMatAluAccesses            0                       # Number of matrix alu accesses (Count)
board.processor.cores.core.exec_context.thread_0.numCallsReturns       816667                       # Number of times a function call or return occured (Count)
board.processor.cores.core.exec_context.thread_0.numMatInsts            0                       # Number of matrix instructions (Count)
board.processor.cores.core.exec_context.thread_0.numIdleCycles     0.001000                       # Number of idle cycles (Cycle)
board.processor.cores.core.exec_context.thread_0.numBusyCycles 3771726996.999000                       # Number of busy cycles (Cycle)
board.processor.cores.core.exec_context.thread_0.notIdleFraction     1.000000                       # Percentage of non-idle cycles (Ratio)
board.processor.cores.core.exec_context.thread_0.idleFraction     0.000000                       # Percentage of idle cycles (Ratio)
board.processor.cores.core.executeStats0.numInsts            0                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches            0                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts            0                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts     20029431                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate            0                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numFpAluAccesses           12                       # Number of float alu accesses (Count)
board.processor.cores.core.executeStats0.numFpRegReads           12                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntAluAccesses     46126181                       # Number of integer alu accesses (Count)
board.processor.cores.core.executeStats0.numIntRegReads     57640623                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites     38160744                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs     20029431                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads          271                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetchStats0.numInsts     46308611                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps     46359860                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.012278                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches      4292775                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.001138                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.dtb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.dtb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 3771726997000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.itb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.itb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED 3771726997000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON 3771726997000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.thread_0.numInsts            0                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps            0                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls          259                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
